Description: >
  Superstar

Resources:
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: Superstar
      GroupDescription: Allow port 22 and port 3030.
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8000
          ToPort: 8000
          CidrIp: 0.0.0.0/0

  superstarCodedeployS3Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: superstarCodedeployS3Role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: superstarS3Policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:*"
                Resource: "*"
        - PolicyName: superstarCodeDeployPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "codedeploy:*"
                  - "ec2:CreateTags"
                  - "ec2:Describe*"
                  - "autoscaling:CompleteLifecycleAction"
                  - "autoscaling:DeleteLifecycleHook"
                  - "autoscaling:DescribeLifecycleHooks"
                  - "autoscaling:DescribeAutoScalingGroups"
                  - "autoscaling:PutLifecycleHook"
                Resource: "*"

  superstarS3EC2Role:
    Type: AWS::IAM::Role
    Properties:
      RoleName: superstarS3EC2Role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: superstarS3Policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:*"
                Resource: "*"
        - PolicyName: superstarEC2Policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ec2:*"
                Resource: "*"

  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      SecurityGroups:
        - Ref: InstanceSecurityGroup
      KeyName: superstar
      ImageId: ami-053b0d53c279acc90
      Tags:
        - Key: Name
          Value: !Sub Superstar
        - Key: Project
          Value: Backend
      IamInstanceProfile:
        Name: !Ref superstarCodedeployS3Role
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo apt update
          sudo apt-get install -y ruby
          wget https://aws-codedeploy-us-east-1.s3.us-east-1.amazonaws.com/latest/install
          chmod +x ./install
          sudo ./install auto > logfile
          sudo service codedeploy-agent stop
          sudo service codedeploy-agent start

          sudo apt update
          sudo apt install apt-transport-https ca-certificates curl software-properties-common
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt update
          apt-cache policy docker-ce
          sudo apt install -y docker-ce
          sudo systemctl status docker

          # Install Docker Compose
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

Outputs:
  VPC:
    Description: A reference to the created VPC
    Value: !Ref EC2Instance
    Export:
      Name: "Superstar"
# Description: >
#   Superstar

# Resources:
#   InstanceSecurityGroup:
#     Type: AWS::EC2::SecurityGroup
#     Properties:
#       GroupName: Superstar
#       GroupDescription: Allow port 22 and port 3030.
#       SecurityGroupIngress:
#         - IpProtocol: tcp
#           FromPort: 22
#           ToPort: 22
#           CidrIp: 0.0.0.0/0
#         - IpProtocol: tcp
#           FromPort: 8000
#           ToPort: 8000
#           CidrIp: 0.0.0.0/0

#   EC2Instance:
#     Type: AWS::EC2::Instance
#     Properties:
#       InstanceType: t2.micro
#       SecurityGroups:
#         - Ref: InstanceSecurityGroup
#       KeyName: superstar
#       ImageId: ami-053b0d53c279acc90
#       Tags:
#         - Key: Name
#           Value: !Sub Superstar
#         - Key: Project
#           Value: Backend

# Outputs:

#     VPC:
#         Description: A reference to the created VPC
#         Value: !Ref EC2Instance
#         Export:
#           Name: "Superstar"
